import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils import executor
from aiogram.types.web_app_info import WebAppInfo
import base64
from io import BytesIO
from PIL import Image
import os

API_TOKEN = '5159271198:AAE3uUnrDpNFyTIovPUTSTt8Jxtl6JE2kE0'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['id'])
async def send_welcome(message: types.Message):
    await message.reply(message.from_user.id)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    website_button = InlineKeyboardButton("–ü–æ—Å–µ—Ç–∏—Ç—å —Å–∞–π—Ç",
                                          web_app=WebAppInfo(url="https://xaryki.github.io/Third_face_bot/"))
    markup = InlineKeyboardMarkup().add(website_button)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –≥–æ–¥–µ —Å –∫–Ω–æ–ø–∫–æ–π
    await message.reply("üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –±–æ—Ç! üéä\n"
                        "–ü–æ–ª—É—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ù–æ–≤–æ–º –ì–æ–¥–µ –∏ –≤—ã–±–µ—Ä–∏ —Å—Ç–∏–ª—å–Ω—É—é —à–∞–ø–∫—É –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞. "
                        "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—à —Å–∞–π—Ç –∏ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏—á–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫ —Å–≤–æ–µ–º—É –æ–Ω–ª–∞–π–Ω-–æ–ø—ã—Ç—É. üéÖüéÑ\n"
                        "#–ù–æ–≤—ã–π–ì–æ–¥ #–ë–æ—Ç", reply_markup=markup, parse_mode='Markdown', disable_web_page_preview=True)


@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def handle_text(message: types.Message):
    print(message.text)
    try:
        if message.web_app_data:
            data = message.web_app_data.data
            image_data = base64.b64decode(data.split(',')[1])
            image = Image.open(BytesIO(image_data))
            image_byte_array = BytesIO()
            image.save(image_byte_array, format='PNG')
            image_byte_array.seek(0)
            await bot.send_photo(message.chat.id, photo=image_byte_array, caption="–í–æ—Ç –≤–∞—à–µ —Ñ–æ—Ç–æ:")
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)